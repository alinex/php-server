/** @namespace Alinex\Dictionary

This classes are used as simple data structure store for flat associative 
arrays, hash tables or dictionaries. It will store a collection of key-value
pairs.

Operations associated with this data type are:
- <b>simple accessors</b>: set, get, has, remove
- <b>array access</b>: offsetSet, offsetGet, offsetExists, offsetUnset
- <b>group access</b>: groupSet, groupGet, groupClear
- <b>value editing</b>: incr, decr, append
- <b>hash access</b>: hashSet, hashGet, hashHas, hashRemove, hashCount
- <b>list access</b>: listPush, listPop, listShift, listUnshift, listGet, 
listSet, listCount
- <b>overall control</b>: count, keys, clear

This implementation supports different storage engines which may be used the
same way. All the above commands are available in all engines natively or
emulated by wrapper functions.

The engines may be used directly but there are some high level classes for
easy use of different/multiple engines (see below).

Central Registry
----------------

The Registry uses an engine to store configuration values. Optional Validator 
rules may be used and the complete Registry may be imported and exported into
different files. 

Cache System
------------

The Cache uses multiple Engines to store caching data. Each of the configured
engines will be checked automatically to find the best storage automatically.

*/
