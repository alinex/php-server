; ---------------------------------------------------------------------------
; Registry data
; ---------------------------------------------------------------------------
; In this format array keys are written as extra lines using '-' as
; separator.

; Storage engine used for caching.
;   The value has to be an array.  The array may have the following keys.
;   Specification for 'other keys': 
;     The value has to be a dictionary engine specification structure.
;     The value has to be an array. An empty array is not allowed. The keys
;     ["type", "prefix"] have to be present. Additionally the keys ["server",
;     "ttl", "name", "directory"] are allowed.  The array may have the
;     following keys.
;     Specification for 'type': 
;       Type of storage engine to use.
;       The value has to be a php class name. The namespace can be
;       prepended. The class have to exists and may be loaded. Full class
;       name will be calculated from relative "Alinex\Dictionary\Engine"
;     Specification for 'prefix': 
;       Prefix or context name to use.
;       The value has to be a text. Control characters excluding
;       newline and carriage return will be removed. The value has to be
;       equal or shorter than 10 characters. The expression "/" have to be
;       matched.
;     Specification for 'ttl': 
;       Default time to live for the entries.
;       The value has to be an integer. The value has to be equal or
;       larger than 0. For type 'redis' and 'memcache' servers are specified
;       as:The value has to be an array. An empty array is not allowed.  The
;       array may have the following keys.
;     Specification for 'other keys': 
;       The value has to be a text. Control characters excluding
;       newline and carriage return will be removed. The expression "#" have
;       to be matched. For type 'directory' the storage path has to be
;       added:The value has to be a reference to a softlink. An absolute path
;       starting with '/' is not allowed. Only an absolute path starting with
;       '/' is allowed. Backreferences in the path are not allowed. The path
;       should point to an existing path entry. The path or the parent
;       directory should be writable. The engine have to be avaiable.
; cache.engine =

; Time intervall to run garbage collector on cache.
;   The value has to be an integer. The value has to be equal or larger
;   than 0.
; cache.gc_time =

; Database connection configuration for default.
;   The value has to be a database connection setting. The value has to be
;   an array. An empty array is not allowed. The key ["driver"] has to be
;   present. Additionally the keys ["host", "dbname", "user", "password",
;   "path", "memory", "port", "unix_socket", "charset"] are allowed.  The
;   array may have the following keys.
;   Specification for 'driver': 
;     The built-in driver implementation to use.
;     The value has to be a text. The value can only be one of
;     ["pdo_mysql", "pdo_sqlite", "pdo_pgsql", "pdo_oci", "oci8",
;     "pdo_sqlsrv"].
;   Specification for 'host': 
;     Hostname of the database to connect to.
;     The value has to be a hostname. The value has to be a text. Control
;     characters excluding newline and carriage return will be removed. The
;     value has to be between 3 and 255 characters long. The characters
;     "/:@\n\r\ลง\b\a" are not allowed.
;   Specification for 'dbname': 
;     Name of the database/schema to connect to.
;     The value has to be a text. Control characters excluding newline
;     and carriage return will be removed.
;   Specification for 'user': 
;     Username to use when connecting to the database.
;     The value has to be a text. Control characters excluding newline
;     and carriage return will be removed.
;   Specification for 'password': 
;     Password to use when connecting to the database.
;     The value has to be a text. Control characters excluding newline
;     and carriage return will be removed.
;   Specification for 'path': 
;     The filesystem path to the database file. Mutually exclusive with
;     memory. path takes precedence.
;     The value has to be a filesystem path. An absolute path starting
;     with '/' is not allowed. Only an absolute path starting with '/' is
;     allowed. Backreferences in the path are not allowed. The path or the
;     parent directory should be writable.
;   Specification for 'memory': 
;     True if the SQLite database should be in-memory (non-persistent).
;     Mutually exclusive with path. path takes precedence.
;     The value has to be a boolean. The value will be true for 1,
;     "true", "on", "yes" and it will be considered as false for 0, "false",
;     "off", "no", "". Other values are not allowed.
;   Specification for 'port': 
;     Port of the database to connect to.
;     The value has to be a port number. The value has to be an integer.
;     The value has to be between 0 and 65535.
;   Specification for 'unix_socket': 
;     Name of the socket used to connect to the database.
;     The value has to be a filesystem path. An absolute path starting
;     with '/' is not allowed. Only an absolute path starting with '/' is
;     allowed. Backreferences in the path are not allowed. The path should
;     point to an existing path entry.
;   Specification for 'charset': 
;     The charset used when connecting to the database.
;     The value has to be a text. Control characters excluding newline
;     and carriage return will be removed. For type 'pdo_sqlite' the
;     following parameters may be given:The value has to be an array. The key
;     ["driver"] has to be present. Additionally the keys ["user",
;     "password", "path", "memory"] are allowed. For type 'pdo_mysql' the
;     following parameters may be given:The value has to be an array. The key
;     ["driver"] has to be present. Additionally the keys ["host", "dbname",
;     "user", "password", "port", "unix_socket", "charset"] are allowed. For
;     type 'pdo_pgsql' and 'pdo_sqlsrv' the following parameters may be
;     given:The value has to be an array. The key ["driver"] has to be
;     present. Additionally the keys ["host", "dbname", "user", "password",
;     "port"] are allowed. For type 'pdo_oci' and 'oci' the following
;     parameters may be given:The value has to be an array. The key
;     ["driver"] has to be present. Additionally the keys ["host", "dbname",
;     "user", "password", "port", "charset"] are allowed.
dbconn.default-dbname = "a3"
dbconn.default-user = "alinex"
dbconn.default-password = "test"
dbconn.default-host = "localhost"
dbconn.default-driver = "pdo_mysql"

; Database connection configuration for default.
;   The value has to be a database connection setting. The value has to be
;   an array. An empty array is not allowed. The key ["driver"] has to be
;   present. Additionally the keys ["host", "dbname", "user", "password",
;   "path", "memory", "port", "unix_socket", "charset"] are allowed.  The
;   array may have the following keys.
;   Specification for 'driver': 
;     The built-in driver implementation to use.
;     The value has to be a text. The value can only be one of
;     ["pdo_mysql", "pdo_sqlite", "pdo_pgsql", "pdo_oci", "oci8",
;     "pdo_sqlsrv"].
;   Specification for 'host': 
;     Hostname of the database to connect to.
;     The value has to be a hostname. The value has to be a text. Control
;     characters excluding newline and carriage return will be removed. The
;     value has to be between 3 and 255 characters long. The characters
;     "/:@\n\r\ลง\b\a" are not allowed.
;   Specification for 'dbname': 
;     Name of the database/schema to connect to.
;     The value has to be a text. Control characters excluding newline
;     and carriage return will be removed.
;   Specification for 'user': 
;     Username to use when connecting to the database.
;     The value has to be a text. Control characters excluding newline
;     and carriage return will be removed.
;   Specification for 'password': 
;     Password to use when connecting to the database.
;     The value has to be a text. Control characters excluding newline
;     and carriage return will be removed.
;   Specification for 'path': 
;     The filesystem path to the database file. Mutually exclusive with
;     memory. path takes precedence.
;     The value has to be a filesystem path. An absolute path starting
;     with '/' is not allowed. Only an absolute path starting with '/' is
;     allowed. Backreferences in the path are not allowed. The path or the
;     parent directory should be writable.
;   Specification for 'memory': 
;     True if the SQLite database should be in-memory (non-persistent).
;     Mutually exclusive with path. path takes precedence.
;     The value has to be a boolean. The value will be true for 1,
;     "true", "on", "yes" and it will be considered as false for 0, "false",
;     "off", "no", "". Other values are not allowed.
;   Specification for 'port': 
;     Port of the database to connect to.
;     The value has to be a port number. The value has to be an integer.
;     The value has to be between 0 and 65535.
;   Specification for 'unix_socket': 
;     Name of the socket used to connect to the database.
;     The value has to be a filesystem path. An absolute path starting
;     with '/' is not allowed. Only an absolute path starting with '/' is
;     allowed. Backreferences in the path are not allowed. The path should
;     point to an existing path entry.
;   Specification for 'charset': 
;     The charset used when connecting to the database.
;     The value has to be a text. Control characters excluding newline
;     and carriage return will be removed. For type 'pdo_sqlite' the
;     following parameters may be given:The value has to be an array. The key
;     ["driver"] has to be present. Additionally the keys ["user",
;     "password", "path", "memory"] are allowed. For type 'pdo_mysql' the
;     following parameters may be given:The value has to be an array. The key
;     ["driver"] has to be present. Additionally the keys ["host", "dbname",
;     "user", "password", "port", "unix_socket", "charset"] are allowed. For
;     type 'pdo_pgsql' and 'pdo_sqlsrv' the following parameters may be
;     given:The value has to be an array. The key ["driver"] has to be
;     present. Additionally the keys ["host", "dbname", "user", "password",
;     "port"] are allowed. For type 'pdo_oci' and 'oci' the following
;     parameters may be given:The value has to be an array. The key
;     ["driver"] has to be present. Additionally the keys ["host", "dbname",
;     "user", "password", "port", "charset"] are allowed.
dbconn.default-dbname = "a3"
dbconn.default-user = "alinex"
dbconn.default-password = "test"
dbconn.default-host = "localhost"
dbconn.default-driver = "pdo_mysql"

; Default lifetime in seconds to keep contentcached.
;   The value has to be an integer. The value has to be equal or larger
;   than 0.
; http.expire =

; The value has to be a dictionary engine specification structure. The
;   value has to be an array. An empty array is not allowed. The keys
;   ["type", "prefix"] have to be present. Additionally the keys ["server",
;   "ttl", "name", "directory"] are allowed.  The array may have the
;   following keys.
;   Specification for 'type': 
;     Type of storage engine to use.
;     The value has to be a php class name. The namespace can be
;     prepended. The class have to exists and may be loaded. Full class name
;     will be calculated from relative "Alinex\Dictionary\Engine"
;   Specification for 'prefix': 
;     Prefix or context name to use.
;     The value has to be a text. Control characters excluding newline
;     and carriage return will be removed. The value has to be equal or
;     shorter than 10 characters. The expression "/" have to be matched.
;   Specification for 'ttl': 
;     Default time to live for the entries.
;     The value has to be an integer. The value has to be equal or larger
;     than 0. For type 'redis' and 'memcache' servers are specified as:The
;     value has to be an array. An empty array is not allowed.  The array may
;     have the following keys.
;   Specification for 'other keys': 
;     The value has to be a text. Control characters excluding newline
;     and carriage return will be removed. The expression "#" have to be
;     matched. For type 'directory' the storage path has to be added:The
;     value has to be a reference to a softlink. An absolute path starting
;     with '/' is not allowed. Only an absolute path starting with '/' is
;     allowed. Backreferences in the path are not allowed. The path should
;     point to an existing path entry. The path or the parent directory
;     should be writable. The engine have to be avaiable.
; registry.data =

; The value has to be a dictionary engine specification structure. The
;   value has to be an array. An empty array is not allowed. The keys
;   ["type", "prefix"] have to be present. Additionally the keys ["server",
;   "ttl", "name", "directory"] are allowed.  The array may have the
;   following keys.
;   Specification for 'type': 
;     Type of storage engine to use.
;     The value has to be a php class name. The namespace can be
;     prepended. The class have to exists and may be loaded. Full class name
;     will be calculated from relative "Alinex\Dictionary\Engine"
;   Specification for 'prefix': 
;     Prefix or context name to use.
;     The value has to be a text. Control characters excluding newline
;     and carriage return will be removed. The value has to be equal or
;     shorter than 10 characters. The expression "/" have to be matched.
;   Specification for 'ttl': 
;     Default time to live for the entries.
;     The value has to be an integer. The value has to be equal or larger
;     than 0. For type 'redis' and 'memcache' servers are specified as:The
;     value has to be an array. An empty array is not allowed.  The array may
;     have the following keys.
;   Specification for 'other keys': 
;     The value has to be a text. Control characters excluding newline
;     and carriage return will be removed. The expression "#" have to be
;     matched. For type 'directory' the storage path has to be added:The
;     value has to be a reference to a softlink. An absolute path starting
;     with '/' is not allowed. Only an absolute path starting with '/' is
;     allowed. Backreferences in the path are not allowed. The path should
;     point to an existing path entry. The path or the parent directory
;     should be writable. The engine have to be avaiable.
; registry.validator =

; Storage engine used for session data.
;   The value has to be a dictionary engine specification structure. The
;   value has to be an array. An empty array is not allowed. The keys
;   ["type", "prefix"] have to be present. Additionally the keys ["server",
;   "ttl", "name", "directory"] are allowed.  The array may have the
;   following keys.
;   Specification for 'type': 
;     Type of storage engine to use.
;     The value has to be a php class name. The namespace can be
;     prepended. The class have to exists and may be loaded. Full class name
;     will be calculated from relative "Alinex\Dictionary\Engine"
;   Specification for 'prefix': 
;     Prefix or context name to use.
;     The value has to be a text. Control characters excluding newline
;     and carriage return will be removed. The value has to be equal or
;     shorter than 10 characters. The expression "/" have to be matched.
;   Specification for 'ttl': 
;     Default time to live for the entries.
;     The value has to be an integer. The value has to be equal or larger
;     than 0. For type 'redis' and 'memcache' servers are specified as:The
;     value has to be an array. An empty array is not allowed.  The array may
;     have the following keys.
;   Specification for 'other keys': 
;     The value has to be a text. Control characters excluding newline
;     and carriage return will be removed. The expression "#" have to be
;     matched. For type 'directory' the storage path has to be added:The
;     value has to be a reference to a softlink. An absolute path starting
;     with '/' is not allowed. Only an absolute path starting with '/' is
;     allowed. Backreferences in the path are not allowed. The path should
;     point to an existing path entry. The path or the parent directory
;     should be writable. The engine have to be avaiable.
; session.engine =

; Time of no access till an session will be declared as inactive.
;   The value has to be an integer. The value has to be equal or larger
;   than 0.
; session.inactive_time =

; Maximum number of session creation per ip in time range.
;   The value has to be an integer. The value has to be equal or larger
;   than 0.
; session.iplock_num =

; Timerange for calculating iplock accesses.
;   The value has to be an integer. The value has to be equal or larger
;   than 0.
; session.iplock_time =

; Maximum time to keep an session active.
;   The value has to be an integer. The value has to be equal or larger
;   than 0.
; session.life_time =

; Maximum time to keep an user logged in.
;   The value has to be an integer. The value has to be equal or larger
;   than 0.
; session.login_time =

