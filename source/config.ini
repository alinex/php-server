; ---------------------------------------------------------------------------
; Registry data
; ---------------------------------------------------------------------------

; Storage engine used for caching.
; The value has to be an array. 
; The array may have the following values: Specification for '1': 
; The value has to be a dictionary engine specification structure. The value
; has to be an array. An empty array is not allowed. The keys ["type",
; "prefix"] have to be present. Additionally the keys ["server", "ttl",
; "name", "directory"] are allowed. 
; The array may have the following values: Specification for 'other keys': 
; Type of storage engine to use.
; The value has to be a php class name. The namespace can be prepended. The
; class have to exists and may be loaded. Full class name will be calculated
; from relative "Alinex\Dictionary\Engine" Specification for 'other keys': 
; Prefix or context name to use.
; The value has to be a text. Control characters excluding newline and
; carriage return will be removed. The value has to be equal or shorter than
; 10 characters. The expression "/" have to be matched. Specification for
; 'other keys': 
; Default time to live for the entries.
; The value has to be an integer. The value has to be equal or larger than 0.
; For type 'redis' and 'memcache' servers are specified as:The value has to
; be an array. An empty array is not allowed. 
; The array may have the following values: Specification for '1': 
; The value has to be a text. Control characters excluding newline and
; carriage return will be removed. The expression "#" have to be matched. For
; type 'directory' the storage path has to be added:The value has to be a
; reference to a softlink. An absolute path starting with '/' is not allowed.
; Only an absolute path starting with '/' is allowed. Backreferences in the
; path are not allowed. The path should point to an existing path entry. The
; path or the parent directory should be writable. The engine have to be
; avaiable.
; cache.engine =

; Time intervall to run garbage collector on cache.
; The value has to be an integer. The value has to be equal or larger than 0.
; cache.gc_time =

dbconn.default-dbname = "a3"
dbconn.default-user = "alinex"
dbconn.default-password = "test"
dbconn.default-host = "localhost"
dbconn.default-driver = "pdo_mysql"

; Default lifetime in seconds to keep contentcached.
; The value has to be an integer. The value has to be equal or larger than 0.
; http.expire =

; The value has to be a dictionary engine specification structure. The value
; has to be an array. An empty array is not allowed. The keys ["type",
; "prefix"] have to be present. Additionally the keys ["server", "ttl",
; "name", "directory"] are allowed. 
; The array may have the following values: Specification for 'other keys': 
; Type of storage engine to use.
; The value has to be a php class name. The namespace can be prepended. The
; class have to exists and may be loaded. Full class name will be calculated
; from relative "Alinex\Dictionary\Engine" Specification for 'other keys': 
; Prefix or context name to use.
; The value has to be a text. Control characters excluding newline and
; carriage return will be removed. The value has to be equal or shorter than
; 10 characters. The expression "/" have to be matched. Specification for
; 'other keys': 
; Default time to live for the entries.
; The value has to be an integer. The value has to be equal or larger than 0.
; For type 'redis' and 'memcache' servers are specified as:The value has to
; be an array. An empty array is not allowed. 
; The array may have the following values: Specification for '1': 
; The value has to be a text. Control characters excluding newline and
; carriage return will be removed. The expression "#" have to be matched. For
; type 'directory' the storage path has to be added:The value has to be a
; reference to a softlink. An absolute path starting with '/' is not allowed.
; Only an absolute path starting with '/' is allowed. Backreferences in the
; path are not allowed. The path should point to an existing path entry. The
; path or the parent directory should be writable. The engine have to be
; avaiable.
; registry.data =

; The value has to be a dictionary engine specification structure. The value
; has to be an array. An empty array is not allowed. The keys ["type",
; "prefix"] have to be present. Additionally the keys ["server", "ttl",
; "name", "directory"] are allowed. 
; The array may have the following values: Specification for 'other keys': 
; Type of storage engine to use.
; The value has to be a php class name. The namespace can be prepended. The
; class have to exists and may be loaded. Full class name will be calculated
; from relative "Alinex\Dictionary\Engine" Specification for 'other keys': 
; Prefix or context name to use.
; The value has to be a text. Control characters excluding newline and
; carriage return will be removed. The value has to be equal or shorter than
; 10 characters. The expression "/" have to be matched. Specification for
; 'other keys': 
; Default time to live for the entries.
; The value has to be an integer. The value has to be equal or larger than 0.
; For type 'redis' and 'memcache' servers are specified as:The value has to
; be an array. An empty array is not allowed. 
; The array may have the following values: Specification for '1': 
; The value has to be a text. Control characters excluding newline and
; carriage return will be removed. The expression "#" have to be matched. For
; type 'directory' the storage path has to be added:The value has to be a
; reference to a softlink. An absolute path starting with '/' is not allowed.
; Only an absolute path starting with '/' is allowed. Backreferences in the
; path are not allowed. The path should point to an existing path entry. The
; path or the parent directory should be writable. The engine have to be
; avaiable.
; registry.validator =

; Storage engine used for session data.
; The value has to be a dictionary engine specification structure. The value
; has to be an array. An empty array is not allowed. The keys ["type",
; "prefix"] have to be present. Additionally the keys ["server", "ttl",
; "name", "directory"] are allowed. 
; The array may have the following values: Specification for 'other keys': 
; Type of storage engine to use.
; The value has to be a php class name. The namespace can be prepended. The
; class have to exists and may be loaded. Full class name will be calculated
; from relative "Alinex\Dictionary\Engine" Specification for 'other keys': 
; Prefix or context name to use.
; The value has to be a text. Control characters excluding newline and
; carriage return will be removed. The value has to be equal or shorter than
; 10 characters. The expression "/" have to be matched. Specification for
; 'other keys': 
; Default time to live for the entries.
; The value has to be an integer. The value has to be equal or larger than 0.
; For type 'redis' and 'memcache' servers are specified as:The value has to
; be an array. An empty array is not allowed. 
; The array may have the following values: Specification for '1': 
; The value has to be a text. Control characters excluding newline and
; carriage return will be removed. The expression "#" have to be matched. For
; type 'directory' the storage path has to be added:The value has to be a
; reference to a softlink. An absolute path starting with '/' is not allowed.
; Only an absolute path starting with '/' is allowed. Backreferences in the
; path are not allowed. The path should point to an existing path entry. The
; path or the parent directory should be writable. The engine have to be
; avaiable.
; session.engine =

; Time of no access till an session will be declared as inactive.
; The value has to be an integer. The value has to be equal or larger than 0.
; session.inactive_time =

; Maximum number of session creation per ip in time range.
; The value has to be an integer. The value has to be equal or larger than 0.
; session.iplock_num =

; Timerange for calculating iplock accesses.
; The value has to be an integer. The value has to be equal or larger than 0.
; session.iplock_time =

; Maximum time to keep an session active.
; The value has to be an integer. The value has to be equal or larger than 0.
; session.life_time =

; Maximum time to keep an user logged in.
; The value has to be an integer. The value has to be equal or larger than 0.
; session.login_time =

